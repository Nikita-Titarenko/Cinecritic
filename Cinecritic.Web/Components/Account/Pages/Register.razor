@page "/Account/Register"

@using System.ComponentModel.DataAnnotations
@using System.Text
@using System.Text.Encodings.Web
@using Cinecritic.Application.DTOs.Account
@using Cinecritic.Application.Services
@using Cinecritic.Application.Services.Emails
@using Cinecritic.Infrastructure.Data
@using Cinecritic.Web.Components.Account
@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.WebUtilities
@using global::AutoMapper

@inject IEmailService EmailService
@inject IdentityRedirectManager RedirectManager
@inject NavigationManager NavigationManager

<PageTitle>Register</PageTitle>

<div class="row w-100 h-100">
	<div class="col-md-4 mx-auto my-auto">
		<h1>Register</h1>
		<h2>Create a new account.</h2>
		<EditForm EditContext="EditContext" asp-route-returnUrl="@ReturnUrl" method="post" OnValidSubmit="RegisterUser" FormName="register">
			<hr />
			<DataAnnotationsValidator/>

			<div class="form-floating mb-3">
				<InputText @bind-Value="Input.DisplayName" class="form-control" autocomplete="username" aria-required="true" placeholder="name@example.com" />
				<label for="DisplayName">Username</label>
				<ValidationMessage For="() => Input.DisplayName" class="text-danger text-start" />
			</div>
			<div class="form-floating mb-3">
				<InputText @bind-Value="Input.Email" class="form-control" autocomplete="username" aria-required="true" placeholder="name@example.com" />
				<label for="email">Email</label>
				<ValidationMessage For="() => Input.Email" class="text-danger text-start" />
			</div>
			<div class="form-floating mb-3">
				<InputText type="password" @bind-Value="Input.Password" class="form-control" autocomplete="new-password" aria-required="true" placeholder="password" />
				<label for="password">Password</label>
				<ValidationMessage For="() => Input.Password" class="text-danger text-start" />
			</div>
			<div class="form-floating mb-3">
				<InputText type="password" @bind-Value="Input.ConfirmPassword" class="form-control" autocomplete="new-password" aria-required="true" placeholder="password" />
				<label for="confirm-password">Confirm Password</label>
				<ValidationMessage For="() => Input.ConfirmPassword" class="text-danger text-start" />
			</div>
			@if (!string.IsNullOrEmpty(statusMessage))
			{
				<StatusMessage Message="@statusMessage"></StatusMessage>
			}
			<button type="submit" class="w-100 btn btn-lg btn-primary">Register</button>
		</EditForm>
	</div>
</div>


